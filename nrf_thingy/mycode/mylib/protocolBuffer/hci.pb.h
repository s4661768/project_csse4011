/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_HCI_HCI_PB_H_INCLUDED
#define PB_HCI_HCI_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _hci_rssiData {
    int32_t node_id;
    int32_t rssi_value;
} hci_rssiData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define hci_rssiData_init_default                {0, 0}
#define hci_rssiData_init_zero                   {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define hci_rssiData_node_id_tag                 1
#define hci_rssiData_rssi_value_tag              2

/* Struct field encoding specification for nanopb */
#define hci_rssiData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    node_id,           1) \
X(a, STATIC,   SINGULAR, INT32,    rssi_value,        2)
#define hci_rssiData_CALLBACK NULL
#define hci_rssiData_DEFAULT NULL

extern const pb_msgdesc_t hci_rssiData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define hci_rssiData_fields &hci_rssiData_msg

/* Maximum encoded size of messages (where known) */
#define HCI_HCI_PB_H_MAX_SIZE                    hci_rssiData_size
#define hci_rssiData_size                        22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
